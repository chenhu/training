<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.jsits.training</groupId>
	<artifactId>training</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>training</name>
	<description>培训相关示例</description>
	<modules>
		<module>jdk6</module>
	</modules>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.6</java.version>
		<jackson.version>2.5.4</jackson.version>
		<slf4j.version>1.7.6</slf4j.version>
		<log4j2.version>2.5</log4j2.version>
		<!-- 构建属性配置 -->
		<ci.server>http://192.168.3.97</ci.server>
		<scm.server>https://192.168.1.50</scm.server>
		<scm.port>9880</scm.port>
		<jenkins.port>8082</jenkins.port>
		<nexus.port>8081</nexus.port>
		<sonar.port>9000</sonar.port>
		<sonar.language>java</sonar.language>
	</properties>
	<dependencyManagement>
		<dependencies>
		</dependencies>
	</dependencyManagement>
	<build>
		<resources>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.properties</include>
					<include>**/*.xml</include>
				</includes>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*.properties</include>
					<include>**/*.xml</include>
				</includes>
				<filtering>true</filtering>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/java</directory>
				<includes>
					<include>**/*.properties</include>
					<include>**/*.xml</include>
				</includes>
				<filtering>true</filtering>
			</testResource>
			<testResource>
				<directory>src/test/resources</directory>
				<includes>
					<include>**/*.properties</include>
					<include>**/*.xml</include>
				</includes>
				<filtering>true</filtering>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
					<showDeprecation>true</showDeprecation>
					<showWarnings>true</showWarnings>
					<optimize>true</optimize>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>2.4</version>
					<executions>
						<execution>
							<id>attach-sources</id>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>copy-dependencies</goal>
											<goal>unpack</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.3.2</version>
					<configuration>
						<outputDirectory>${project.build.directory}/install</outputDirectory>
						<archive>
							<manifest>
								<addClasspath>true</addClasspath>
								<classpathPrefix>dependencies/</classpathPrefix>
							</manifest>
							<addMavenDescriptor>true</addMavenDescriptor>
						</archive>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>2.6</version>
					<configuration>
						<outputDirectory>${project.build.directory}/install</outputDirectory>
						<packagingExcludes />
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>dependencies/</classpathPrefix>
						</manifest>
						<archive>
							<addMavenDescriptor>true</addMavenDescriptor>
						</archive>
						<webResources>
							<resource>
								<directory>${project.build.directory}/staging</directory>
								<includes>
									<include>**</include>
								</includes>
							</resource>
						</webResources>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<!-- 此处版本必须大于2.8 ，否则缺少传递依赖 -->
					<version>2.10</version>
					<executions>
						<execution>
							<id>copy</id>
							<!-- 此处原为install，后来改为package(执行maven的package命令时做拷贝操作) -->
							<phase>package</phase>
							<goals>
								<goal>copy-dependencies</goal>
							</goals>
							<configuration>
								<!-- 其中${project.build.directory}是maven变量，表示target目录. 如果不写的话，将在根目录下创建lib目录。 -->
								<outputDirectory>
									${project.build.directory}/dependencies
								</outputDirectory>
								<!-- <excludeTransitive>false</excludeTransitive> excludeTransitive表示是否不包含间接依赖的包 -->
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.6</version>
				</plugin>
				<!-- 跳过单元测试 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.19.1</version>
					<configuration>
						<skipTests>${skip}</skipTests>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<version>2.3</version>
					<executions>
						<execution>
							<phase>package</phase>
							<goals>
								<goal>shade</goal>
							</goals>
							<configuration>
								<filters>
									<filter>
										<artifact>*:*</artifact>
										<excludes>
											<exclude>META-INF/*.SF</exclude>
											<exclude>META-INF/*.DSA</exclude>
											<exclude>META-INF/*.RSA</exclude>
											<exclude>org/apache/storm/**</exclude>
											<exclude>stor*</exclude>
											<exclude>org/slf4j/**</exclude>
											<exclude>defaults.yaml</exclude>
										</excludes>
									</filter>
								</filters>
								<transformers>
									<transformer
										implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
										<!-- main入口 -->
										<mainClass>com.jsits.tutorial.storm.topology.WordCountTopology</mainClass>
									</transformer>
									<transformer
										implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
										<resource>META-INF/spring.handlers</resource>
									</transformer>
									<transformer
										implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
										<resource>META-INF/spring.schemas</resource>
									</transformer>
								</transformers>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<profiles>
		<profile>
			<id>dev</id>
			<properties>
				<!-- 工程存放根路径 -->
				<framework.basepath>${basedir}</framework.basepath>
				<log4j.home>${framework.basepath}/log</log4j.home>
				<log.encoding>UTF-8</log.encoding>
				<log.main>${project.name}.log</log.main>
				<log.main.gz>${project.name}-%d{yyyy-MM-dd}.log.gz</log.main.gz>
				<log.error.gz>${project.name}-%d{yyyy-MM-dd}.error.gz</log.error.gz>
				<log.error>${project.name}-error.log</log.error>
				<logger>${project.artifactId}</logger>
				<dependencies.log.level>debug</dependencies.log.level>
			</properties>
			<distributionManagement>
				<repository>
					<id>user-release</id>
					<name>release</name>
					<url>http://192.168.3.97:8081/content/repositories/releases/</url>
				</repository>
				<snapshotRepository>
					<id>user-snapshots</id>
					<name>snapshot</name>
					<url>http://192.168.3.97:8081/content/repositories/snapshots/</url>
				</snapshotRepository>
			</distributionManagement>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
	</profiles>
	<developers>
		<developer>
			<id>chenhu</id>
			<name>陈胡</name>
			<email>cha@jsits.com</email>
			<url>http://chenhu.jiangsuits.com</url>
			<organization>jsits</organization>
			<organizationUrl>www.jiangsuits.com</organizationUrl>
			<roles>
				<role>architect</role>
				<role>developer</role>
			</roles>
			<timezone>8</timezone>
		</developer>
	</developers>
</project>